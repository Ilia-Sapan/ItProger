# Если возникает ошибка "No module named 'pandas'", активируйте виртуальное окружение и выполните:
# pip install pandas


import pandas as pd
reviews = pd.read_csv(r"C:\Users\isapa\PycharmProjects\itProger\WEITERBILDUNG\2. Übungen Theorie Data Science Kurse\txt & others\K4.0026_2.0_1.4.4.Ü.01_dirtydata.csv")
pd.set_option('display.max_rows', 5) # 2 первые, 2 последние, 1 промежуточная
print("------------------------------------------------------------------------------")
print("\t\t\t\t\t\t\tВсе колонки и данные\n")
print(reviews)
print("------------------------------------------------------------------------------")
# print(reviews.Datum)
print("------------------------------------------------------------------------------")
print("\t\t\t\t\t\t\tТолько даты\n")
print(reviews["Datum"])
print("------------------------------------------------------------------------------")
print("\t\t\t\t\t\t\tТолько дата под индексом [0]\n")
print(reviews['Datum'][0])
print("------------------------------------------------------------------------------")
print("\t\t\t\t\t\t\tПервая строка\n")
print(reviews.iloc[0])
print("------------------------------------------------------------------------------")
print("\t\t\t\t\t\t\tВыводит первые три значения из первого столбца таблицы reviews\n")
print(reviews.iloc[:3, 0])
print("------------------------------------------------------------------------------")
print("\t\t\t\t\t\t\tЕсли нужно выбрать первые 3 строки и все столбцы\n")
print(reviews.iloc[:3, :])
print("\t\t\t\t\t\t\tвыводит 2 строки (индексы 1 и 2) из первого столбца.\n")
print(reviews.iloc[1:3, 0])
print("------------------------------------------------------------------------------")
print("\t\t\t\t\t\t\tвыводит строки 0, 1, 2 из первого столбца.\n")
print(reviews.iloc[[0, 1, 2], 0])
print("------------------------------------------------------------------------------")
print("\t\t\t\t\t\t\t выводит последние 5 строк всей таблицы. \n")
print(reviews.iloc[-5:])
print("------------------------------------------------------------------------------")
print("\t\t\t\t\t\t\t Выводит значение под индексом [0] в столбце Kunden \n")
print(reviews.loc[0, 'Kunden'])
print("------------------------------------------------------------------------------")
print("\t\t\t\t\t\t\t Выбирает из таблицы три столбца \n")
# iloc использует схему индексации Python stdlib, в которой первый элемент диапазона включается,
# а последний исключается. Таким образом, 0:10 выберет записи 0,...,9. loc,
# тем временем, индексирует включительно. Таким образом, 0:10 будет выбирать записи 0,...,10.
print(reviews.loc[:,["Kunden" ,  "MinKauf" , "MaxKauf"]])
print("------------------------------------------------------------------------------")
print("\t\t\t\t\t\t\t Выводит изменённый DataFrame, где Kunden теперь индекс. \n")
print(reviews.set_index("Kunden"))
print("------------------------------------------------------------------------------")
print("\t\t\t\t\t\t\t Проверяем, или 129 есть в строчках по регистру MinKauf, вернет true/false \n")
print(reviews.MinKauf == 129)
print("------------------------------------------------------------------------------")
print("\t\t\t\t\t\t\t Выбирает и выводит все строки столбца MinKauf, в которых значение равно 129. \n")
print(reviews.MinKauf[reviews.MinKauf == 129])
print("------------------------------------------------------------------------------")
print("\t\t\t\t\t\t\t Только строки, где Kunden == 92 и MaxKauf > 100, остаются в результате. \n")
print(reviews.loc[(reviews.Kunden == 92) & (reviews.MaxKauf > 100)])
print("------------------------------------------------------------------------------")
print("\t\t\t\t\t\t\t Только строки, где Kunden == 92 и MaxKauf > 100, остаются в результате и если нужно вывести только определённые столбцы. \n")
print(reviews.loc[(reviews.Kunden == 92) & (reviews.MaxKauf > 100), ['Kunden', 'MaxKauf']])
print("------------------------------------------------------------------------------")
print("\t\t\t\t\t\t\t  Kunden равен 92 ИЛИ MaxKauf больше 100 \n")
print(reviews.loc[(reviews.Kunden == 92) | (reviews.MaxKauf > 100)])
print("------------------------------------------------------------------------------")
print("\t\t\t\t\t\t\t  Метод .isin([60, 30]) проверяет, есть ли значения в списке \n")
print(reviews.loc[reviews.Kunden.isin([60, 30])])
print("------------------------------------------------------------------------------")
print("\t\t\t\t\t\t\t  Выбирает строки, где в MaxKauf нет NaN (пустых значений). \n")
print(reviews.loc[reviews.MaxKauf.notnull()])
print("------------------------------------------------------------------------------")
print("\t\t\t\t\t\t\t  Выбирает колонку и присваивает ей значение новое (тут - Kunden все etwas) \n")
reviews['Kunden'] ='Etwas'
print(reviews)
print("------------------------------------------------------------------------------")
print("\t\t\t\t\t\t\t  Выбирает колонку MaxKauf и присваивает ей снизу вверх (-1) новые значения по длине \n")
reviews['MaxKauf'] = range(len(reviews), 0, -1)
print(reviews)
print("------------------------------------------------------------------------------")
indices = [0,1,30]
df_subset = reviews.loc[:,["Dauer", "MaxKauf", "MinKauf"]]
df_subset = reviews.loc[indices]
print(df_subset)