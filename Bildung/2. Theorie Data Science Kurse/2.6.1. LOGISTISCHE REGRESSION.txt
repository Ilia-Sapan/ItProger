2.6.1. Что такое логистическая регрессия?
Логистическая регрессия — это алгоритм машинного обучения,
используемый для бинарной классификации.
В отличие от линейной регрессии,
она предсказывает вероятность принадлежности объекта к одному из двух классов.


2.6.3. Метод максимального правдоподобия
Параметры модели (коэффициенты b) подбираются методом максимального правдоподобия (Maximum Likelihood Estimation, MLE).
Вместо минимизации суммы квадратов ошибок (как в линейной регрессии),
в логистической регрессии максимизируется вероятность правильных предсказаний.


2.6.5. Мультиномиальная логистическая регрессия
Применяется, если классов больше двух. Использует несколько бинарных логистических регрессий:

One-vs-All (OvA): строятся k моделей, каждая классифицирует один класс против всех остальных.
Softmax-регрессия: использует функцию softmax, которая нормализует вероятности по всем классам.

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

# Генерируем случайные данные
np.random.seed(42)
X = np.random.rand(100, 2)
y = (X[:, 0] + X[:, 1] > 1).astype(int)  # Простое правило: если сумма признаков > 1, класс = 1

# Разделяем на обучающую и тестовую выборки
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Обучаем логистическую регрессию
model = LogisticRegression()
model.fit(X_train, y_train)

# Делаем предсказания
y_pred = model.predict(X_test)

# Оцениваем точность
print("Accuracy:", accuracy_score(y_test, y_pred))
