 Множественная регрессия (Multiple Regression)
 Это статистический метод, который позволяет моделировать зависимость одной переменной (целевой, зависимой)
 от нескольких независимых (предикторов, факторов).


 4️⃣ Когда использовать множественную регрессию?
 ✅ Когда есть несколько факторов, влияющих на целевую переменную.
 ✅ Когда нужно оценить вклад каждого фактора.
 ✅ Когда важно предсказывать значения (например, инфляцию, цены акций, продажи).

 ⚠ Ограничения:

 Предикторы не должны быть сильно скоррелированы между собой (иначе возникает мультиколлинеарность).
 Линейная модель может не учесть нелинейные зависимости.

 Мультиколлинеарность: почему это проблема?
 Определение:
 Мультиколлинеарность возникает, когда предикторы (независимые переменные) сильно коррелируют друг с другом.

 Модель становится менее интерпретируемой.

 2.3.2.Programmierung einer multiplen Regression
from statistics import LinearRegression

 Импортируем библиотеки
import pandas as pd   Работа с таблицами (DataFrame)
from sklearn import linear_model   Импортируем модуль для линейной регрессии

 Указываем путь к CSV-файлу с данными
file = r"C:\Users\isapa\Desktop\DS Kurse\Kursmaterial Theorie\Car_data.csv"

 Читаем данные в DataFrame
df = pd.read_csv(file)
 Определяем независимые переменные (предикторы)
X = df[['Weight', 'Volume']]   Два фактора: вес и объем двигателя

 Определяем зависимую переменную (целевая переменная)
y = df['CO2']   Количество выбросов CO2


 Создаем модель линейной регрессии
regr = linear_model.LinearRegression()

 Обучаем модель на данных X (вес, объем) и y (CO2)
regr.fit(X, y)

 Предсказываем выброс CO2 для машины весом 2300 кг и объемом двигателя 1300 кубов
predictedCO2 = regr.predict([[2300,1300]])  [[2300,1300]] → 2D массив (нужно для sklearn)

print(predictedCO2)
print(regr.coef_)  коэффициенты

 2.3.3.Multiple Regression mit kategorischen Daten
 One-Hot-Encoding


 Загружаем данные в DataFrame
cars = pd.read_csv(file)

 One-Hot-Encoding: преобразуем категориальную переменную "Car" в бинарные столбцы
ohe_cars = pd.get_dummies(cars[['Car']])

 Объединяем числовые признаки (Volume, Weight) с закодированными категориальными признаками
X = pd.concat([cars[['Volume', 'Weight']], ohe_cars], axis=1)  pd.concat() объединяет числовые и категориальные признаки (OHE) по столбцам (axis=1).

 Определяем целевую переменную (выбросы CO2)
y = cars['CO2']

 Создаем модель линейной регрессии
regr = linear_model.LinearRegression()

 Обучаем модель на данных
regr.fit(X, y)

 Предсказываем выброс CO2 для машины с:
 - Весом 2300 кг
 - Объемом двигателя 1300 куб. см
 - Маркой, которая соответствует 1 в нужном столбце OHE (остальные 0)
predictedCO2 = regr.predict([[2300, 1300, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0]])

 Выводим предсказанный выброс CO2
print(predictedCO2)   [122.45153299]


