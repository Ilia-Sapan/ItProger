class Auto:  # Создаём класс 'Auto', который моделирует автомобиль.
    'Modell von Auto'  # Описание класса: модель автомобиля.

    def __init__(self, marke, modell, baujahr):  # Конструктор класса, который инициализирует атрибуты объекта.
        # self — это текущий объект класса (на который указывает Python), marke, modell, baujahr — параметры для создания объекта.
        self.marke = marke  # Атрибут объекта, хранящий марку автомобиля (например, 'Toyota').
        self.modell = modell  # Атрибут объекта, хранящий модель автомобиля (например, 'Corolla').
        self.baujahr = baujahr  # Атрибут объекта, хранящий год выпуска автомобиля (например, 2018).
        self.kilometerstand = 0  # Инициализируем атрибут 'kilometerstand' с нулём (первоначальный пробег автомобиля).

    def fahren(self, kilometer):  # Метод, моделирующий поездку автомобиля.
        # Принимает параметр 'kilometer' — количество километров, которое автомобиль проехал.
        self.kilometerstand += kilometer  # Увеличиваем текущий пробег автомобиля на указанное количество километров.

    def anzeigen(self):  # Метод для вывода информации о машине.
        # Выводим все атрибуты объекта в читаемом формате, используя f-строку.
        print(f'Marke: {self.marke}, '  # Выводим марку автомобиля.
              f'Modell: {self.modell}, '  # Выводим модель автомобиля.
              f'Baujahr: {self.baujahr}, '  # Выводим год выпуска.
              f'Kilometerstand: {self.kilometerstand}')  # Выводим пробег автомобиля.

# Создаём объект класса 'Auto', передавая параметры в конструктор:
auto_1 = Auto('Toyota', 'Corolla', 2018)  # Объект 'auto_1' с маркой 'Toyota', моделью 'Corolla', годом выпуска 2018.

auto_1.fahren(1500)  # Вызываем метод 'fahren' для объекта 'auto_1', увеличивая пробег на 1500 км.

auto_1.anzeigen()  # Вызываем метод 'anzeigen' для объекта 'auto_1', чтобы вывести информацию о машине (в том числе пробег).
