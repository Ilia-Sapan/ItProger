def train(input_list, w_ih, w_ho, target_list, learning_rate):
    # ‚¨áÔ∏è –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Ö–æ–¥–Ω–æ–π –∏ —Ü–µ–ª–µ–≤–æ–π –≤–µ–∫—Ç–æ—Ä—ã –≤ —Å—Ç–æ–ª–±—Ü—ã (2D)
    input_vector = numpy.array(input_list, ndmin=2).T
    targets = numpy.array(target_list, ndmin=2).T

    # üîπ –ü—Ä—è–º–æ–π –ø—Ä–æ—Ö–æ–¥ (Forward pass)

    # –í—ã—á–∏—Å–ª—è–µ–º —Å–∏–≥–Ω–∞–ª—ã –Ω–∞ —Å–∫—Ä—ã—Ç–æ–º —Å–ª–æ–µ
    input_hidden = numpy.dot(w_ih, input_vector)

    # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–∏–≥–º–æ–∏–¥—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—ã—Ö–æ–¥–æ–≤ —Å–∫—Ä—ã—Ç–æ–≥–æ —Å–ª–æ—è
    output_hidden = scipy.special.expit(input_hidden)

    # –í—ã—á–∏—Å–ª—è–µ–º —Å–∏–≥–Ω–∞–ª—ã –Ω–∞ –≤—ã—Ö–æ–¥–Ω–æ–º —Å–ª–æ–µ (–µ—â—ë –±–µ–∑ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏)
    input_final = numpy.dot(w_ho, output_hidden)

    # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–∏–≥–º–æ–∏–¥—É –∫ –≤—ã—Ö–æ–¥–Ω–æ–º—É —Å–ª–æ—é ‚Äî –ø–æ–ª—É—á–∞–µ–º –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–µ –≤—ã—Ö–æ–¥—ã
    output_final = scipy.special.expit(input_final)

    # üîª –û—à–∏–±–∫–∏

    # –û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Å–ª–æ—è: –∫–∞–∫ –¥–∞–ª–µ–∫–æ –æ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
    output_errors = targets - output_final

    # –û—à–∏–±–∫–∞ —Å–∫—Ä—ã—Ç–æ–≥–æ —Å–ª–æ—è: –∫–∞–∫ —Å–∏–ª—å–Ω–æ –ø–æ–≤–ª–∏—è–ª–∏ —Å–∫—Ä—ã—Ç—ã–µ –Ω–µ–π—Ä–æ–Ω—ã –Ω–∞ –æ—à–∏–±–∫—É –≤—ã—Ö–æ–¥–∞
    hidden_errors = numpy.dot(w_ho.T, output_errors)

    # üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Å–æ–≤

    # –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Å–∞ –º–µ–∂–¥—É —Å–∫—Ä—ã—Ç—ã–º –∏ –≤—ã—Ö–æ–¥–Ω—ã–º —Å–ª–æ—è–º–∏
    # dW = lr * –æ—à–∏–±–∫–∞ * –≤—ã—Ö–æ–¥ * (1 - –≤—ã—Ö–æ–¥) * –≤—Ö–æ–¥^T
    w_ho += learning_rate * numpy.dot(
        (output_errors * output_final * (1 - output_final)),
        numpy.transpose(output_hidden)
    )

    # –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Å–∞ –º–µ–∂–¥—É –≤—Ö–æ–¥–æ–º –∏ —Å–∫—Ä—ã—Ç—ã–º —Å–ª–æ–µ–º
    w_ih += learning_rate * numpy.dot(
        (hidden_errors * output_hidden * (1 - output_hidden)),
        numpy.transpose(input_vector)
    )
