# standartmodul tkinter

# Widgets = Windows + Gadgets

from tkinter import Tk, Label  # Aus dem Modul tkinter wird der Name Tk importiert.
fenster = Tk() # Ein Objekt des Typs Tk wird erzeugt. Objekte dieses Typs sind ^ Anwendungsfenster – gewissermaßen die äußere Hülle eines Programms
fenster.title('Fenster') # Benennen
label = Label(master = fenster, text = 'Guten Morgen')
label.pack()

fenster.mainloop() # Das Anwendungsfenster wird aktiviert. Ab jetzt funktionieren die Schaltflächen auf dem Fensterrahmen

# bg — цвет фона виджета.
# fg — цвет текста.
# font — шрифт текста.
# width — ширина виджета.
# height — высота виджета.
# relief — стиль границы (например, 'sunken', 'raised').
# padx — отступ по горизонтали.
# pady — отступ по вертикали.
# anchor — выравнивание содержимого (например, 'w', 'e', 'center').
# borderwidth — толщина границы виджета.
# textvariable — связывает виджет с переменной.
# state — состояние виджета ('normal', 'disabled').
# command — функция, вызываемая при взаимодействии с виджетом.
# image — изображение, которое будет отображаться в виджете.
# highlightbackground — цвет фона при выделении.
# highlightcolor — цвет выделенной рамки.
# justify — выравнивание текста в многострочном виджете ('left', 'right', 'center').
# cursor — тип курсора (например, 'arrow', 'hand2').
# relief — стиль рамки (например, 'flat', 'raised').
# selectmode — режим выбора для виджетов (например, 'single', 'multiple').
# text - текст, надпись

# Вот список общих методов виджетов в Tkinter:
#
# pack() — размещает виджет с использованием паковщика (обычно по вертикали или горизонтали).
# grid() — размещает виджет в сетке (по строкам и столбцам).
# place() — размещает виджет в произвольной позиции (по координатам).
# destroy() — удаляет виджет из интерфейса.
# config() — изменяет параметры виджета после его создания.
# get() — извлекает текущее значение из виджетов ввода (например, Entry, Text).
# insert() — вставляет текст в виджет ввода (например, Entry, Text).
# bind() — связывает события с функциями (например, нажатие клавиши или клик мыши).
# focus_set() — устанавливает фокус на виджет, чтобы начать с ним взаимодействовать.
# cget() — возвращает текущее значение заданной опции виджета.
# after() в Tkinter используется для выполнения функции через определённый интервал времени (в миллисекундах)

# 11.7. Das Layout verfeinern
#
# В pack():
# side — указывает, с какой стороны контейнера должен быть размещен виджет:
#
# "top" — сверху (по умолчанию).
# "bottom" — снизу.
# "left" — слева.
# "right" — справа.
# anchor — задает выравнивание содержимого внутри виджета:
#
# "n" — север (верх).
# "s" — юг (низ).
# "e" — восток (право).
# "w" — запад (лево).
# "ne", "nw", "se", "sw" — комбинации (например, северо-восток).
# "center" — центр (по умолчанию).
# fill — определяет, как виджет будет растягиваться:
#
# "x" — растягивается по горизонтали.
# "y" — растягивается по вертикали.
# "both" — растягивается и по горизонтали, и по вертикали.
# None — не растягивается (по умолчанию).
# expand — если True, виджет будет расширяться, чтобы занять доступное пространство в контейнере (работает в комбинации с fill):
#
# True — виджет будет растягиваться, чтобы занять все доступное пространство.
# False — виджет не будет растягиваться.
# padx / pady — отступы по горизонтали (для padx) и по вертикали (для pady).
#
# ipadx / ipady — внутренние отступы внутри виджета по горизонтали (для ipadx) и по вертикали (для ipady).
#
# В grid():
# row — строка в сетке.
#
# column — столбец в сетке.
#
# sticky — указывает, как виджет должен растягиваться в пределах своей ячейки:
#
# "n", "s", "e", "w" — растягивает виджет по одному из направлений (например, "ns" — растягивает по вертикали).
# "nsew" — растягивает по всем направлениям.
# columnspan — количество столбцов, которые виджет должен занимать.
#
# rowspan — количество строк, которые виджет должен занимать.
#
# padx / pady — отступы по горизонтали и вертикали.
#
# ipadx / ipady — внутренние отступы по горизонтали и вертикали.
#
# В place():
# x / y — координаты расположения виджета относительно родительского контейнера.
# relx / rely — координаты, выраженные как относительные значения от 0 до 1.
# anchor — выравнивание виджета (например, "center", "nw" и т.д.).
# width / height — фиксированная ширина и высота виджета.
# bordermode — способ измерения размеров: "outside" или "inside".

# 11.8 Raster-Layout
# widget.grid(column = m, row = n)
# Основные параметры grid():
# row — строка, в которой будет размещен виджет.
# column — столбец, в котором будет размещен виджет.
# sticky — указывает, как виджет будет растягиваться по ячейке (например, "nsew" для растяжения по всем направлениям).
# columnspan — количество столбцов, которые виджет будет занимать.
# rowspan — количество строк, которые виджет будет занимать.
# padx / pady — отступы по горизонтали и вертикали.
# ipadx / ipady — внутренние отступы в ячейке.

# 11.12 Dialogboxen

# Вот основные опции для диалоговых окон в Tkinter:
#
# 1. messagebox (информационные окна)
# showinfo(title, message) — отображает информационное окно.
# showwarning(title, message) — отображает предупреждение.
# showerror(title, message) — отображает окно ошибки.
# askquestion(title, message) — спрашивает "Да" или "Нет".
# askokcancel(title, message) — окно с кнопками "OK" и "Cancel".
# askyesno(title, message) — окно с кнопками "Yes" и "No".
# askretrycancel(title, message) — окно с кнопками "Retry" и "Cancel".
# 2. filedialog (диалоговые окна для работы с файлами)
# askopenfilename() — открывает диалог для выбора файла (возвращает путь).
# asksaveasfilename() — открывает диалог для сохранения файла.
# askdirectory() — открывает диалог для выбора папки.
# 3. colorchooser (выбор цвета)
# askcolor() — открывает диалог для выбора цвета (возвращает выбранный цвет).

